---
apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: dotnet-aisbm-main-nodb-s2i
message: Создано новое dotnet-приложение.
metadata:
  annotations:
    description: Шаблон для сборки и запуска dotnet приложения АИС Библиотеки москвы
    openshift.io/display-name: dotnet (Moscow Libraries)
    tags: 'dotnet'
    version: 1.0.0
  name: dotnet-aisbm-main-nodb-s2i
  namespace: aisbm-main
objects:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The application http port.
      labels:
        app: '${APPLICATION_NAME}'
      name: '${APPLICATION_NAME}'
    spec:
      ports:
        - name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        deploymentConfig: '${APPLICATION_NAME}'
  - apiVersion: v1
    id: '${APPLICATION_NAME}-http'
    kind: Route
    metadata:
      annotations:
        description: Route for application http service.
      labels:
        app: '${APPLICATION_NAME}'
      name: '${APPLICATION_NAME}'
    spec:
      host: '${HOSTNAME_HTTP}'
      path: '${PATH_HTTP}'
      to:
        name: '${APPLICATION_NAME}'
  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        app: '${APPLICATION_NAME}'
      name: '${APPLICATION_NAME}'
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      labels:
        app: '${APPLICATION_NAME}'
      name: '${APPLICATION_NAME}'
    spec:
      failedBuildsHistoryLimit: 5
      successfulBuildsHistoryLimit: 5
      output:
        to:
          kind: ImageStreamTag
          name: '${APPLICATION_NAME}:latest'
      source:
        git:
          ref: '${SOURCE_REPOSITORY_REF}'
          uri: '${SOURCE_REPOSITORY_URL}'
        sourceSecret:
          name: build
        type: Git
      strategy:
        sourceStrategy:
          env:
            - name: DOTNET_STARTUP_PROJECT
              value: ${DOTNET_STARTUP_PROJECT}
          from:
            kind: ImageStreamTag
            name: 'dotnet-31-rhel7:latest'
            namespace: 'openshift'
        type: Source
      triggers:
        - imageChange: {}
          type: ImageChange
        - type: ConfigChange
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: '${APPLICATION_NAME}'
      name: '${APPLICATION_NAME}'
    spec:
      revisionHistoryLimit: 5
      replicas: 1
      selector:
        deploymentConfig: '${APPLICATION_NAME}'
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            app: '${APPLICATION_NAME}'
            deploymentConfig: '${APPLICATION_NAME}'
          name: '${APPLICATION_NAME}'
        spec:
          containers:
            - env:
              - name: ABISBookOnHandsServiceAddress
                value: 'https://testabis.msklib.ru/services/mosru-middleware/get-user-outputs/'
              - name: ABISBookOnHandsServiceUserName
                value: 'srvuser'
              - name: ABISBookOnHandsServicePassword
                value: 'Val4g4N15Ha'
              image: '${APPLICATION_NAME}'
              imagePullPolicy: Always
              name: '${APPLICATION_NAME}'
              resources:
                limits:
                  memory: "2Gi"
                  cpu: "500m"
              ports:
                - containerPort: 8080
                  name: http
                  protocol: TCP
              volumeMounts:
                - mountPath: /opt/filestorage
                  name: '${APPLICATION_NAME}-file-pvol'
          terminationGracePeriodSeconds: 75
          volumes:
            - name: '${APPLICATION_NAME}-file-pvol'
              persistentVolumeClaim:
                claimName: '${APPLICATION_NAME}-file-claim'
      triggers:
        - imageChangeParams:
            automatic: true
            containerNames:
              - '${APPLICATION_NAME}'
            from:
              kind: ImageStreamTag
              name: '${APPLICATION_NAME}:latest'
          type: ImageChange
        - type: ConfigChange
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        app: '${APPLICATION_NAME}'
      name: '${APPLICATION_NAME}-file-claim'
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: '${VOLUME_FILE_CAPACITY}'
      storageClassName: glusterfs-storage
parameters:
  - description: The name for the application.
    displayName: Application Name
    name: APPLICATION_NAME
    required: true
  - description: The name for the db service.
    displayName: Db
    name: DATABASE_SERVICE_NAME
    required: true
  - description: Used to select the project to run.
    displayName: DotNet startup project
    name: DOTNET_STARTUP_PROJECT
    required: true
  - description: >-
      Custom hostname for http service route.  Leave blank for default hostname,
      e.g.: <application-name>-<project>.<default-domain-suffix>
    displayName: Custom http Route Hostname
    name: HOSTNAME_HTTP
  - description: Путь относительно корневого узла сайта
    displayName: Относительный путь
    name: PATH_HTTP
  - description: Git source URI for application
    displayName: Git Repository URL
    name: SOURCE_REPOSITORY_URL
    required: true
  - description: Git branch/tag reference
    displayName: Git Reference
    name: SOURCE_REPOSITORY_REF
    value: master
  - description: Size of persistent storage for files storage.
    displayName: Size file storage
    name: VOLUME_FILE_CAPACITY
    required: true
    value: 100Gi

